/* globals.css or index.css */

/* 1) import Tailwind (v4) */
@import "tailwindcss";

/*
  2) THEME: define tokens (colors, fonts, animate tokens, keyframes, small tokens)
  Tailwind will generate utilities from tokens like --color-<name> -> bg-<name>, text-<name>, etc.
*/
@theme {
  /* Colors (flattened names -> bg-crimson-red, text-crimson-red, etc) */
  --color-crimson-black: #0a0a0a;
  --color-crimson-dark: #1a0505;
  --color-crimson-red: #ff0040;
  --color-crimson-bright: #ff4060;
  --color-crimson-neon: #ff6b8a;
  --color-crimson-gray: #808080;
  --color-crimson-white: #ffffff;

  --color-electric-blue: #00d4ff;
  --color-electric-purple: #8000ff;
  --color-electric-green: #00ff80;
  --color-electric-yellow: #ffff00;

  /* Fonts (Tailwind uses tokens like --font-sans, --font-mono, --font-display) */
  --font-sans: "Orbitron", "Inter", system-ui, sans-serif;
  --font-mono: "JetBrains Mono", "Courier New", monospace;
  --font-display: "Exo", "Arial Black", sans-serif;

  /* Backdrop blur small token (creates e.g. backdrop-blur-xs) */
  --backdrop-blur-xs: 2px;

  /* Animations: declare --animate-<name> values that reference @keyframes */
  --animate-float: float 6s ease-in-out infinite;
  --animate-glow: glow 2s ease-in-out infinite alternate;
  --animate-pulse-red: pulse-red 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  --animate-scan: scan 2s linear infinite;
  --animate-matrix: matrix 20s linear infinite;
  --animate-hologram: hologram 3s ease-in-out infinite;
  --animate-engine: engine 1s ease-in-out infinite alternate;
  --animate-cyber-pulse: cyber-pulse 1.5s ease-in-out infinite;

  /* Keyframes â€” important: define keyframes *inside* @theme so Tailwind can wire them to animate tokens */
  @keyframes float {
    0%, 100% { transform: translateY(0px) rotateX(0deg) rotateY(0deg); }
    50%     { transform: translateY(-20px) rotateX(10deg) rotateY(5deg); }
  }

  @keyframes glow {
    from { box-shadow: 0 0 20px rgba(255,0,64,0.5), inset 0 0 20px rgba(255,0,64,0.1); }
    to   { box-shadow: 0 0 40px rgba(255,0,64,0.8), inset 0 0 30px rgba(255,0,64,0.3); }
  }

  @keyframes pulse-red {
    0%,100% { opacity: 1; transform: scale(1); }
    50%     { opacity: 0.8; transform: scale(1.05); }
  }

  @keyframes scan {
    0%   { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }

  @keyframes matrix {
    0%   { transform: translateY(-100%); }
    100% { transform: translateY(100vh); }
  }

  @keyframes hologram {
    0%,100% { opacity: 0.8; filter: hue-rotate(0deg); }
    50%     { opacity: 1;   filter: hue-rotate(90deg); }
  }

  @keyframes engine {
    from { text-shadow: 0 0 10px rgba(255,0,64,0.8), 0 0 20px rgba(255,0,64,0.6); }
    to   { text-shadow: 0 0 20px rgba(255,0,64,1),   0 0 40px rgba(255,0,64,0.8); }
  }

  @keyframes cyber-pulse {
    0%,100% {
      border-color: rgba(255,0,64,0.3);
      box-shadow: 0 0 10px rgba(255,0,64,0.2);
    }
    50% {
      border-color: rgba(255,0,64,1);
      box-shadow: 0 0 30px rgba(255,0,64,0.6), inset 0 0 10px rgba(255,0,64,0.1);
    }
  }
}

/* 3) layers & utilities
   - Use @layer utilities to add any custom classes that don't map directly to a @theme token
   - This is where we port your addUtilities plugin
*/
@layer utilities {
  /* perspective utilities */
  .perspective-1000 { perspective: 1000px; }
  .perspective-2000 { perspective: 2000px; }
  .transform-style-3d { transform-style: preserve-3d; }
  .backface-hidden { backface-visibility: hidden; }

  /* text and border glow helpers */
  .text-glow {
    text-shadow: 0 0 10px currentColor, 0 0 20px currentColor, 0 0 40px currentColor;
  }

  .text-engine {
    background: linear-gradient(45deg, var(--color-crimson-red), var(--color-crimson-bright), var(--color-crimson-neon));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .border-glow {
    border-image: linear-gradient(45deg, var(--color-crimson-red), var(--color-crimson-bright), var(--color-crimson-neon), var(--color-crimson-red)) 1;
  }

  .glass-crimson {
    background: rgba(255, 0, 64, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 0, 64, 0.2);
  }

  /* hologram effect + uses the theme animation token */
  .hologram-effect {
    background:
      linear-gradient(45deg, transparent 30%, rgba(255,0,64,0.1) 50%, transparent 70%),
      linear-gradient(-45deg, transparent 30%, rgba(0,212,255,0.1) 50%, transparent 70%);
    animation: var(--animate-hologram);
  }

  /* complex background-image utilities (bg-*), since @theme doesn't provide backgroundImage namespace */
  .bg-grid-pattern {
    background-image:
      linear-gradient(rgba(255,0,64,0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255,0,64,0.1) 1px, transparent 1px);
    background-size: 50px 50px;
  }

  .bg-cyber-grid {
    background-image:
      linear-gradient(rgba(255,0,64,0.2) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255,0,64,0.2) 1px, transparent 1px),
      radial-gradient(circle, rgba(255,0,64,0.1) 1px, transparent 1px);
    background-size: 100px 100px, 100px 100px, 20px 20px;
  }

  .bg-engine-glow {
    background-image: radial-gradient(ellipse at center, rgba(255,0,64,0.3) 0%, transparent 70%);
  }
}

/* 4) Optionally: default root styles (apply a default font stack or base color) */
:root {
  /* set your default font families using the theme tokens */
  --tw-font-sans: var(--font-sans);
  --tw-font-mono: var(--font-mono);
}

/* You can also include any other global base overrides in @layer base { ... } if needed */
